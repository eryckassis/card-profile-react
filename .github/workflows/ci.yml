name: CI

# Quando este workflow será executado
on:
  push:
    branches: [main, master, develop, remote]
  pull_request:
    branches: [main, master, develop, remote]

# Cancela workflows anteriores se houver novo push
# Analogia: Se você entrega nova versão do trabalho, cancela a correção da versão antiga
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Lint (verifica qualidade do código)
  lint:
    name: 🔍 Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 💅 Check Prettier formatting
        run: npm run format:check

  # Job 2: Type Check (verifica tipos TypeScript)
  type-check:
    name: 📘 Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 📘 Run TypeScript compiler
        run: npx tsc --noEmit

  # Job 3: Test (roda testes em múltiplas versões do Node)
  test:
    name: 🧪 Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    
    # Matrix: roda testes em Node 20 e 22
    # Analogia: Testar o app em Chrome E Firefox
    # Node 18 não suporta node:inspector/promises usado pelo Vitest 4.x
    strategy:
      matrix:
        node-version: [20, 22]
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests with coverage
        run: npm run test:coverage

      - name: 📊 Upload coverage to CodeCov (Node 20 only)
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true

      - name: 📊 Upload coverage reports (Node 20 only)
        if: matrix.node-version == 20
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  # Job 4: Build (verifica se build funciona)
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # Job 5: E2E Tests (testes end-to-end com Playwright)
  e2e:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: 🧪 Run E2E tests
        run: npm run test:e2e

      - name: 📊 Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  # Job 6: Success (só roda se tudo passar)
  all-checks-passed:
    name: ✅ All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint, type-check, test, build, e2e]
    
    steps:
      - name: 🎉 All checks passed
        run: echo "All CI checks passed successfully!"
